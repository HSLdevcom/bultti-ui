# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
  mutation: Mutation
}

type Contract {
  id: ID!
  operatingUnits: [OperatingUnit!]
  operator: [Operator!]
  routes: [Route!]
}

type DepartureBlock {
  arrivalTime: String!
  blockFile: String!
  dayType: String!
  departureTime: String!
  departureType: DepartureType!
  direction: String!
  id: String!
  inDepot: String!
  outDepot: String!
  preInspection: PreInspection
  preInspectionId: String
  routeId: String!
  vehicleId: String!
}

type ExecutionRequirement {
  area: OperatingArea!
  equipmentClass: Int!
  requirement: String!
  week: Int!
  year: Int!
}

type File {
  encoding: String!
  filename: String!
  mimetype: String!
}

type Mutation {
  uploadDepartureBlocks(file: Upload, inspectionId: String!): [DepartureBlock!]
}

type OperatingUnit {
  id: ID!
  operator: Operator
  operatorId: String
  routeIds: [String!]
}

type Operator {
  contracts: [Contract!]
  id: String!
  name: String
  operatingUnits: [OperatingUnit!]
  routes: [Route!]
  vehicles: [Vehicle!]
}

type PreInspection {
  createdAt: String!
  createdBy: String!
  departureBlocks: [DepartureBlock!]!
  endDate: String!
  executionRequirements: [ExecutionRequirement!]!
  id: String!
  operatorId: String!
  productionEnd: String!
  productionStart: String!
  season: Season!
  seasonId: String!
  startDate: String!
}

type Query {
  contracts: [Contract!]
  operatingUnits(operatorId: String!): [OperatingUnit!]
  operator(id: String): Operator
  operators: [Operator!]
  routes: [Route!]
  seasons: [Season!]
  uploads: [String]
  vehicles(all: Boolean): [Vehicle!]
}

type Route {
  area: OperatingArea!
  contract: Contract
  contractId: String
  currentOperators: [Operator!]
  direction: Int!
  id: ID!
  operatingUnit: OperatingUnit
  operatingUnitId: String
  routeId: String!
}

type Season {
  dateBegin: String!
  dateEnd: String!
  id: String!
  season: String!
  year: Int!
}

type Vehicle {
  age: Int!
  emissionClass: String!
  emissionDesc: String!
  exteriorColor: String!
  id: ID!
  operator: Operator
  operatorId: String
  registryNr: String!
  routes: [Route!]
  type: String!
  vehicleId: String!
}

enum DepartureType {
  I
  N
  O
}

enum OperatingArea {
  CENTER
  OTHER
}

input ExecutionRequirementInput {
  area: OperatingArea!
  equipmentClass: Int!
  requirement: String!
  week: Int!
  year: Int!
}

input PreInspectionInput {
  endDate: String!
  executionRequirements: [ExecutionRequirementInput!]!
  operatorId: String!
  productionEnd: String!
  productionStart: String!
  season: SeasonInput!
  startDate: String!
}

input SeasonInput {
  dateBegin: String
  dateEnd: String
  id: String!
  season: String
  year: Int
}


scalar Upload
